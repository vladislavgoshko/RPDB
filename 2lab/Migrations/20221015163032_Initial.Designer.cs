// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _2lab;

#nullable disable

namespace _2lab.Migrations
{
    [DbContext(typeof(SewingCompanyContext))]
    [Migration("20221015163032_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("_2lab.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("_2lab.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("ProviderId")
                        .HasColumnType("int");

                    b.Property<double?>("QuantityInStock")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("ProviderId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("_2lab.MaterialList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double?>("MaterialAmount")
                        .HasColumnType("float");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ProductId");

                    b.ToTable("MaterialLists");
                });

            modelBuilder.Entity("_2lab.MaterialsForProduct", b =>
                {
                    b.Property<string>("MatName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double?>("MaterialAmount")
                        .HasColumnType("float");

                    b.Property<int>("MtId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.ToView("MaterialsForProduct");
                });

            modelBuilder.Entity("_2lab.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeliveryOrderDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ExecutionStartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ImplementationDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("date");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("WorkerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("_2lab.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("_2lab.ProductsOfWorker", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("WorkerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("ProductsOfWorkers");
                });

            modelBuilder.Entity("_2lab.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("date");

                    b.Property<double?>("MaterialAmount")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("_2lab.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Position")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Section")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("_2lab.Material", b =>
                {
                    b.HasOne("_2lab.Provider", "Provider")
                        .WithMany("Materials")
                        .HasForeignKey("ProviderId")
                        .HasConstraintName("FK__Materials__Provi__3C69FB99");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("_2lab.MaterialList", b =>
                {
                    b.HasOne("_2lab.Material", "Material")
                        .WithMany("MaterialLists")
                        .HasForeignKey("MaterialId")
                        .HasConstraintName("FK__MaterialL__Mater__412EB0B6");

                    b.HasOne("_2lab.Product", "Product")
                        .WithMany("MaterialLists")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__MaterialL__Produ__4222D4EF");

                    b.Navigation("Material");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("_2lab.Order", b =>
                {
                    b.HasOne("_2lab.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Orders__Customer__44FF419A");

                    b.HasOne("_2lab.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Orders__ProductI__45F365D3");

                    b.HasOne("_2lab.Worker", "Worker")
                        .WithMany("Orders")
                        .HasForeignKey("WorkerId")
                        .HasConstraintName("FK__Orders__WorkerId__46E78A0C");

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("_2lab.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("_2lab.Material", b =>
                {
                    b.Navigation("MaterialLists");
                });

            modelBuilder.Entity("_2lab.Product", b =>
                {
                    b.Navigation("MaterialLists");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("_2lab.Provider", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("_2lab.Worker", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
